
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xde\x0b\xdd\x99y\xf6\\\xd7\xd9\xf8\xfclW\xf4\x13X'
    
_lr_action_items = {'SUB':([25,26,27,33,35,39,40,43,49,50,52,53,54,55,57,58,59,60,61,62,63,64,75,76,],[43,43,43,43,-29,-33,43,-30,43,43,-37,-41,-40,-42,-23,-24,43,-25,43,-35,-31,-34,-32,-36,]),'EQUAL':([17,],[26,]),'FLOATCONST':([25,26,27,35,37,40,42,43,49,50,57,58,59,60,61,62,64,],[-39,-39,-39,-29,55,-39,-38,-30,-39,-39,-23,-24,-39,-25,-39,-35,-34,]),'PROGRAM':([0,],[2,]),'GREATER':([33,38,39,48,52,53,54,55,63,71,75,76,],[-28,57,-33,-26,-37,-41,-40,-42,-31,-27,-32,-36,]),'PRINT':([7,12,14,15,18,66,79,82,],[16,16,-17,-19,-18,-43,-44,-49,]),'DIV':([39,52,53,54,55,76,],[62,-37,-41,-40,-42,-36,]),'MULT':([39,52,53,54,55,76,],[64,-37,-41,-40,-42,-36,]),'CLOSEPARENTHESIS':([33,34,36,38,39,41,45,48,51,52,53,54,55,56,63,71,72,74,75,76,78,],[-28,-48,-46,-22,-33,-45,67,-26,73,-37,-41,-40,-42,-20,-31,-27,-48,-21,-32,-36,-47,]),'OPENBRACKETS':([4,5,10,25,26,27,35,40,43,46,49,50,57,58,59,60,61,62,64,67,68,69,81,],[-3,7,-2,40,40,40,-29,40,-30,-13,40,40,-23,-24,40,-25,40,-35,-34,7,-11,-12,7,]),'CLOSEBRACKETS':([7,12,13,14,15,18,23,33,38,39,48,52,53,54,55,56,63,65,66,71,74,75,76,79,82,],[-16,-16,24,-17,-19,-18,-15,-28,-22,-33,-26,-37,-41,-40,-42,-20,-31,76,-43,-27,-21,-32,-36,-44,-49,]),'STRINGCONST':([25,50,],[36,36,]),'COLON':([9,11,22,31,32,70,],[20,-6,-4,-5,-8,-7,]),'COMMA':([11,32,33,34,36,38,39,41,48,52,53,54,55,56,63,71,72,74,75,76,],[21,47,-28,50,-46,-22,-33,-45,-26,-37,-41,-40,-42,-20,-31,-27,50,-21,-32,-36,]),'$end':([1,8,24,],[0,-1,-14,]),'DIFFERENCE':([33,38,39,48,52,53,54,55,63,71,75,76,],[-28,60,-33,-26,-37,-41,-40,-42,-31,-27,-32,-36,]),'ELSE':([24,77,],[-14,81,]),'ADD':([25,26,27,33,35,39,40,43,49,50,52,53,54,55,57,58,59,60,61,62,63,64,75,76,],[35,35,35,35,-29,-33,35,-30,35,35,-37,-41,-40,-42,-23,-24,35,-25,35,-35,-31,-34,-32,-36,]),'INTCONST':([25,26,27,35,37,40,42,43,49,50,57,58,59,60,61,62,64,],[-39,-39,-39,-29,53,-39,-38,-30,-39,-39,-23,-24,-39,-25,-39,-35,-34,]),'VAR':([4,],[6,]),'ID':([2,6,7,12,14,15,18,21,25,26,27,35,37,40,42,43,46,47,49,50,57,58,59,60,61,62,64,66,79,82,],[3,11,17,17,-17,-19,-18,32,-39,-39,-39,-29,54,-39,-38,-30,11,32,-39,-39,-23,-24,-39,-25,-39,-35,-34,-43,-44,-49,]),'IF':([7,12,14,15,18,66,79,82,],[19,19,-17,-19,-18,-43,-44,-49,]),'SEMICOLON':([3,24,28,29,30,33,38,39,44,48,52,53,54,55,56,63,71,73,74,75,76,77,80,83,],[4,-14,-9,-10,46,-28,-22,-33,66,-26,-37,-41,-40,-42,-20,-31,-27,79,-21,-32,-36,-51,82,-50,]),'INT':([20,],[28,]),'FLOAT':([20,],[29,]),'LESSER':([33,38,39,48,52,53,54,55,63,71,75,76,],[-28,58,-33,-26,-37,-41,-40,-42,-31,-27,-32,-36,]),'OPENPARENTHESIS':([16,19,],[25,27,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elsecondition':([77,],[80,]),'vars':([4,],[5,]),'operation2':([39,],[61,]),'expaux':([33,],[48,]),'operation':([25,26,27,33,40,49,50,59,61,],[42,42,42,49,42,42,42,42,42,]),'termaux':([39,],[63,]),'idsloop':([11,],[22,]),'program':([0,],[1,]),'optionaloperator':([25,26,27,40,49,50,59,61,],[37,37,37,37,37,37,37,37,]),'comparer':([38,],[59,]),'factor':([25,26,27,40,49,50,59,61,],[39,39,39,39,39,39,39,39,]),'type':([20,],[30,]),'expressionaux':([38,],[56,]),'assignment':([7,12,],[14,14,]),'writting':([7,12,],[15,15,]),'declarationloop':([46,],[68,]),'declaration':([6,46,],[10,69,]),'condition':([7,12,],[18,18,]),'constvar':([37,],[52,]),'statute':([7,12,],[12,12,]),'term':([25,26,27,40,49,50,59,61,],[33,33,33,33,33,33,33,75,]),'statutesloop':([7,12,],[13,23,]),'expstring':([25,50,],[34,72,]),'ids':([6,46,],[9,9,]),'idsloop2':([21,47,],[31,70,]),'exp':([25,26,27,40,49,50,59,],[38,38,38,38,71,38,74,]),'writtingloop':([34,72,],[51,78,]),'expression':([25,26,27,40,50,],[41,44,45,65,41,]),'block':([5,67,81,],[8,77,83,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON vars block','program',5,'p_program','parser.py',6),
  ('vars -> VAR declaration','vars',2,'p_vars','parser.py',9),
  ('vars -> <empty>','vars',0,'p_vars','parser.py',10),
  ('ids -> ID idsloop','ids',2,'p_ids','parser.py',13),
  ('idsloop -> COMMA idsloop2','idsloop',2,'p_idsloop','parser.py',16),
  ('idsloop -> <empty>','idsloop',0,'p_idsloop','parser.py',17),
  ('idsloop2 -> ID COMMA idsloop2','idsloop2',3,'p_idsloop2','parser.py',20),
  ('idsloop2 -> ID','idsloop2',1,'p_idsloop2','parser.py',21),
  ('type -> INT','type',1,'p_type','parser.py',24),
  ('type -> FLOAT','type',1,'p_type','parser.py',25),
  ('declaration -> ids COLON type SEMICOLON declarationloop','declaration',5,'p_declaration','parser.py',28),
  ('declarationloop -> declaration','declarationloop',1,'p_declarationloop','parser.py',31),
  ('declarationloop -> <empty>','declarationloop',0,'p_declarationloop','parser.py',32),
  ('block -> OPENBRACKETS statutesloop CLOSEBRACKETS','block',3,'p_block','parser.py',35),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',38),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',39),
  ('statute -> assignment','statute',1,'p_statute','parser.py',42),
  ('statute -> condition','statute',1,'p_statute','parser.py',43),
  ('statute -> writting','statute',1,'p_statute','parser.py',44),
  ('expression -> exp expressionaux','expression',2,'p_expression','parser.py',47),
  ('expressionaux -> comparer exp','expressionaux',2,'p_expressionaux','parser.py',50),
  ('expressionaux -> <empty>','expressionaux',0,'p_expressionaux','parser.py',51),
  ('comparer -> GREATER','comparer',1,'p_comparer','parser.py',54),
  ('comparer -> LESSER','comparer',1,'p_comparer','parser.py',55),
  ('comparer -> DIFFERENCE','comparer',1,'p_comparer','parser.py',56),
  ('exp -> term expaux','exp',2,'p_exp','parser.py',59),
  ('expaux -> operation exp','expaux',2,'p_expaux','parser.py',62),
  ('expaux -> <empty>','expaux',0,'p_expaux','parser.py',63),
  ('operation -> ADD','operation',1,'p_operation','parser.py',66),
  ('operation -> SUB','operation',1,'p_operation','parser.py',67),
  ('term -> factor termaux','term',2,'p_term','parser.py',70),
  ('termaux -> operation2 term','termaux',2,'p_termaux','parser.py',73),
  ('termaux -> <empty>','termaux',0,'p_termaux','parser.py',74),
  ('operation2 -> MULT','operation2',1,'p_operation2','parser.py',77),
  ('operation2 -> DIV','operation2',1,'p_operation2','parser.py',78),
  ('factor -> OPENBRACKETS expression CLOSEBRACKETS','factor',3,'p_factor','parser.py',81),
  ('factor -> optionaloperator constvar','factor',2,'p_factor','parser.py',82),
  ('optionaloperator -> operation','optionaloperator',1,'p_optionaloperator','parser.py',85),
  ('optionaloperator -> <empty>','optionaloperator',0,'p_optionaloperator','parser.py',86),
  ('constvar -> ID','constvar',1,'p_constvar','parser.py',89),
  ('constvar -> INTCONST','constvar',1,'p_constvar','parser.py',90),
  ('constvar -> FLOATCONST','constvar',1,'p_constvar','parser.py',91),
  ('assignment -> ID EQUAL expression SEMICOLON','assignment',4,'p_assignment','parser.py',94),
  ('writting -> PRINT OPENPARENTHESIS expstring writtingloop CLOSEPARENTHESIS SEMICOLON','writting',6,'p_writting','parser.py',97),
  ('expstring -> expression','expstring',1,'p_expstring','parser.py',100),
  ('expstring -> STRINGCONST','expstring',1,'p_expstring','parser.py',101),
  ('writtingloop -> COMMA expstring writtingloop','writtingloop',3,'p_writtingloop','parser.py',104),
  ('writtingloop -> <empty>','writtingloop',0,'p_writtingloop','parser.py',105),
  ('condition -> IF OPENPARENTHESIS expression CLOSEPARENTHESIS block elsecondition SEMICOLON','condition',7,'p_condition','parser.py',108),
  ('elsecondition -> ELSE block','elsecondition',2,'p_elsecondition','parser.py',111),
  ('elsecondition -> <empty>','elsecondition',0,'p_elsecondition','parser.py',112),
]
